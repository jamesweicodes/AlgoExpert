#def function used and we will use helper functinon starting from index 0 to len-1
def binarySearch(array, target):
    return binarySearchHelper(array,target,0,len(array)-1)
#helper function passing in left and right 
def binarySearchHelper(array,target, left, right):
	#if l <r then we we continue as it never overlaps
	while left <= right:
		#round down the middle 
		middle = (left+right)//2
		#pm = actual number of middle index 
		potentialMatch = array[middle]
		#if target equal to pm we are done
		if target == potentialMatch:
			return middle
		#if target is less than pm disregard all to the right and make new right
		#one to the left of current middle
		elif target < potentialMatch:
			right = middle -1
			#if target is greater than pm then we move all of left to right of middle
		elif target >potentialMatch:
			left = middle +1
	return -1
		#time complex. = O(log(n))
    #space complex = O(1)
