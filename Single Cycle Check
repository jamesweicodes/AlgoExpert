#list of ints and return a boolean of single cycle. 
#visit every number once,. save each number as 0, and every vist add one
# once through n elements we need to be back at normal
# 

def hasSingleCycle(array):
    numElementsVisited = 0
	currentIdx = 0
	#while not met over the numer of indexes in array
	while numElementsVisited < len(array):
		#if past first index and still at current idx,
		if numElementsVisited > 0 and currentIdx == 0:
			return False
		numElementsVisited +=1
		
		currentIdx = getNextIdx(currentIdx,array)
	return currentIdx == 0
def getNextIdx(currentIdx,array):
	jump = array[currentIdx]
	#if num too big, we will wrap around. 
	#use mod to use loop around multiple times if needed
	nextIdx = (currentIdx +jump) %len(array)
	#for negative number
	return nextIdx if nextIdx >= 0 else nextIdx +len(array)
